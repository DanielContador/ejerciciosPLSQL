/*intento fail*/

VAR B_UF NUMBER(10);
VAR B_COLACION NUMBER(10);
VAR B_MOVI NUMBER(10);
VAR B_10 NUMBER(10);
VAR B_15 NUMBER(10);
VAR B_20 NUMBER(10);
VAR B_25 NUMBER(10);
VAR B_30 NUMBER(10);
VAR PORC_AFP NUMBER(10);
EXEC :B_UF:=28608;
EXEC :B_COLACION:=60000;
EXEC :B_MOVI:=40000;
EXEC :B_10:=10;
EXEC :B_10:=15;
EXEC :B_10:=20;
EXEC :B_10:=25;
EXEC :B_10:=30;
EXEC :PORC_AFP:=12;

DECLARE
    V_BONO_ANTIGUEDAD NUMBER(10);
    V_BONO_CARGA NUMBER(10);
    V_BONO_VIAJES NUMBER(10);
    V_SALUD NUMBER(10);
    V_TOTAL_IMPONIBLE NUMBER(10);
    V_TOTAL_NOIMPONIBLE NUMBER(10);
    V_TOTAL NUMBER(10);
    V_TOTAL_DESCUENTOS NUMBER(10);
    V_TOTAL_LIQUIDO NUMBER(10);
    V_RUTCHOFER VARCHAR2(30);
    V_NOMBRE VARCHAR2(30);
    V_IDCHOFER NUMBER(10);
    V_VIAJES NUMBER(10);
    V_CARGAS NUMBER(10);
    V_ANNOS NUMBER(10);
    V_UFISAP NUMBER(10);
    V_NOMBREISAPRE VARCHAR2(30);
    V_IDSALUD NUMBER(10);
    V_PORCANTIGUEDAD NUMBER(10);
    V_SUELDOBASE NUMBER(10);

BEGIN
    SELECT CH.IDCHOFER, CH.RUTCHOFER AS RUT, CH.NOMBRE||' '||CH.APELLIDO_P||' '||CH.APELLIDO_M AS NOMBRE_COMPLETO,
    COUNT(VIA.PATENTE) AS VIAJES
    , COUNT(CA.IDCHOFER) AS CARGAS
    , SAL.NOMBRE, SAL.IDSALUD, SAL.UF,
    EXTRACT(YEAR FROM SYSDATE)-EXTRACT(YEAR FROM CH.FECHA_CONTRATO) AS ANNOS,
    CH.SUELDO_BASE
    /*INTO V_IDCHOFER, V_RUTCHOFER, V_NOMBRE, V_VIAJES, V_CARGAS, V_NOMBREISAPRE, V_IDSALUD, V_UFISAP, V_ANNOS, V_SUELDOBASE*/
    FROM CHOFER CH 
    LEFT JOIN CARGAS_FAMILIARES CA ON CH.IDCHOFER=CA.IDCHOFER
    INNER JOIN BUS BU ON BU.IDCHOFER=CH.IDCHOFER 
    INNER JOIN VIAJES VIA ON BU.PATENTE=VIA.PATENTE
    LEFT JOIN SALUD SAL ON SAL.IDSALUD=CH.IDSALUD
    WHERE CH.IDCHOFER=2
    GROUP BY CH.IDCHOFER, CH.RUTCHOFER, CH.NOMBRE, CH.APELLIDO_P,
    CH.APELLIDO_M, VIA.PATENTE, SAL.NOMBRE, SAL.IDSALUD, CH.FECHA_CONTRATO, SAL.UF, CH.SUELDO_BASE;
    
    
    V_PORCANTIGUEDAD:=
    CASE 
        WHEN V_ANNOS BETWEEN 1 AND 5 THEN 10
        WHEN V_ANNOS BETWEEN 6 AND 9 THEN 15
        WHEN V_ANNOS BETWEEN 10 AND 15 THEN 20
        WHEN V_ANNOS BETWEEN 16 AND 25 THEN 25
        WHEN V_ANNOS BETWEEN 26 AND 30 THEN 30
    END;
    
    V_BONO_ANTIGUEDAD:=TRUNC(V_SUELDOBASE*(V_PORC_ANTIGUEDAD/100));
    
    
    
END;





/*2(no funciona intente cambiar por natural join)*/

 SELECT IDCHOFER, RUTCHOFER AS RUT,NOMBRE||' '||APELLIDO_P||' '||APELLIDO_M AS NOMBRE_COMPLETO,
    COUNT(PATENTE) AS VIAJES
    , COUNT(IDCHOFER) AS CARGAS
    , NOMBRE, IDSALUD, UF,
    EXTRACT(YEAR FROM SYSDATE)-EXTRACT(YEAR FROM FECHA_CONTRATO) AS ANNOS,
    SUELDO_BASE
    /*INTO V_IDCHOFER, V_RUTCHOFER, V_NOMBRE, V_VIAJES, V_CARGAS, V_NOMBREISAPRE, V_IDSALUD, V_UFISAP, V_ANNOS, V_SUELDOBASE*/
    FROM CHOFER 
    NATURAL JOIN CARGAS_FAMILIARES 
    NATURAL JOIN BUS 
    NATURAL JOIN VIAJES 
    NATURAL JOIN SALUD 
    WHERE IDCHOFER=2
    GROUP BY IDCHOFER, RUTCHOFER, NOMBRE, APELLIDO_P,
APELLIDO_M, PATENTE, NOMBRE, IDSALUD,FECHA_CONTRATO, UF,SUELDO_BASE;


/*3*/
/*NONEQUIJOIN PARA LA TABLA DE SALUD ON TRUNC(MONTHS_BETWEEN(SYSDATE, V_FECHA_CONTRATO/12))-2 BETWEEN ANNO_INF AND ANNO_SUP
SE PUEDE HACER VARIOS SELECT EN VEZ DE HACER JOINS

MONTHS BETWEEN PARA CALCULAR AÑOS, YA QUE ES MAS EXACTO
PORQUE  EXTRACT YEAR TE DA EL AÑO, AUNQUE AUN NO SE HAYA CUMPLIDO
MONTO NO IMPONIBLE SON BONOS GENERALMENTE
CTRL+F PARA BUSCAR*/




/*ERRORES CORREGIDOS
1. NO HABER CAMBIADO TODOS LOS WHERE IDCHOFER=1 POR IDCHOFER=V_ID_CHOFER_PROCESA
2.HABER ESCRITO MAL EL MONTHS_BETWEEN, YA QUE PUSE EL PARENTESIS MAL (MONTHS_BETWEEN(SYSDATE, V_FECHA_CONTRATO)/12)-2
COMO SE PUEDE VER, LA DIVISION POR 12 NO PUEDE ESTAR DENTRO DEL PARENTESIS
3. EL INSERT ESTABA MALO, NO SE EXACTAMENTE PORQUE, PERO SE CORRIGIO COPIANDO Y PEGANDO VARIABLE POR VARIABLE
ES BASTANTE UTIL UTILIZAR LOS MARCADORES, PARA MOVERSE ENTRE EL DECLARE Y VALUES 
*/

VAR B_MOVILIZACION NUMBER;
VAR B_COLACION NUMBER;
VAR B_VALOR_UF NUMBER;
EXEC :B_VALOR_UF:=28608;
EXEC :B_MOVILIZACION:=40000;
EXEC :B_COLACION :=60000;

DECLARE
V_RUTCHOFER VARCHAR2(15);
V_NOMBRE_COMPLETO VARCHAR2(150);
V_FECHA_CONTRATO DATE;
V_SUELDO_BASE NUMBER(9);
V_ANNO_ANTIGUEDAD NUMBER(2);
V_PORC_ANT NUMBER(2);
V_MONTO_ANTIGUEDAD NUMBER(10);
V_CANT_CARGAS NUMBER(3);
V_MONTO_CARGAS NUMBER(8);
V_CANT_VIAJES NUMBER(4);
V_MONTO_VIAJES NUMBER(8);
V_MONTO_IMPONIBLE NUMBER(8);
V_MONTO_SALUD NUMBER(8);
V_MONTO_AFP NUMBER(8);
V_ID_SALUD_CHOFER NUMBER(4);
V_UF_SALUD NUMBER(3,2);
V_TOTAL_HABERES NUMBER(8);
V_DESCUENTO NUMBER (8);
V_LIQUIDO NUMBER(8);
V_MONTO_NO_IMPONIBLE NUMBER(8);
V_CANT_FILA_PROCESA NUMBER(8);
V_ID_CHOFER_PROCESA NUMBER(8);

BEGIN
    SELECT COUNT(*), MIN(IDCHOFER) INTO V_CANT_FILA_PROCESA, V_ID_CHOFER_PROCESA FROM CHOFER;
    
    FOR J IN 1..V_CANT_FILA_PROCESA LOOP
    
    
    SELECT
    RUTCHOFER, NOMBRE||' '||APELLIDO_P||' '||APELLIDO_M, FECHA_CONTRATO, SUELDO_BASE, IDSALUD
    INTO V_RUTCHOFER,V_NOMBRE_COMPLETO, V_FECHA_CONTRATO, V_SUELDO_BASE, V_ID_SALUD_CHOFER
    FROM CHOFER WHERE IDCHOFER=V_ID_CHOFER_PROCESA;
    
    SELECT UF INTO V_UF_SALUD FROM SALUD 
    WHERE IDSALUD=V_ID_SALUD_CHOFER;

    V_ANNO_ANTIGUEDAD:=TRUNC(MONTHS_BETWEEN(SYSDATE, V_FECHA_CONTRATO)/12)-2;
    
    SELECT PORC INTO V_PORC_ANT FROM BONO_ANTIGUEDAD
    WHERE V_ANNO_ANTIGUEDAD BETWEEN ANNO_INF AND ANNO_SUP;
    
    V_MONTO_ANTIGUEDAD:=TRUNC(V_SUELDO_BASE*(V_PORC_ANT/100));
    
    SELECT COUNT(*) INTO V_CANT_CARGAS FROM CARGAS_FAMILIARES
    WHERE IDCHOFER=V_ID_CHOFER_PROCESA;
    
    V_MONTO_CARGAS:=
    CASE
        WHEN V_CANT_CARGAS = 1 THEN 20000
        WHEN V_CANT_CARGAS = 2 THEN 30000
        WHEN V_CANT_CARGAS BETWEEN 3 AND 6 THEN 50000
        ELSE 0
    END;
    
    SELECT COUNT(*) INTO V_CANT_VIAJES FROM VIAJES V
    INNER JOIN BUS B ON B.PATENTE=V.PATENTE WHERE B.IDCHOFER=V_ID_CHOFER_PROCESA AND TO_CHAR(V.FECHA_VIAJE, 'FMMMYYYY')='22019';
    
    IF V_CANT_VIAJES=0 THEN
    V_MONTO_VIAJES:=0;
    ELSIF V_CANT_VIAJES BETWEEN 1 AND 3 THEN
    V_MONTO_VIAJES:=25000;
    ELSIF V_CANT_VIAJES BETWEEN 4 AND 6 THEN
    V_MONTO_VIAJES:=30000;
    ELSIF V_CANT_VIAJES>6 THEN
    V_MONTO_VIAJES:=60000;
    END IF;
    
V_MONTO_IMPONIBLE:=V_SUELDO_BASE+V_MONTO_ANTIGUEDAD+V_MONTO_VIAJES;

V_MONTO_AFP:=V_MONTO_IMPONIBLE*.012;



CASE
    WHEN V_UF_SALUD=0 THEN
    V_MONTO_SALUD:=V_MONTO_IMPONIBLE*0.07;
    ELSE
    V_MONTO_SALUD:=V_UF_SALUD*:B_VALOR_UF;
END CASE;

V_MONTO_AFP:=V_MONTO_IMPONIBLE*0.12;
V_MONTO_NO_IMPONIBLE:=:B_MOVILIZACION+:B_COLACION+V_MONTO_CARGAS;

V_TOTAL_HABERES:=V_SUELDO_BASE+V_MONTO_ANTIGUEDAD+V_MONTO_CARGAS+V_MONTO_VIAJES+:B_MOVILIZACION+:B_COLACION;

V_DESCUENTO:=V_MONTO_AFP+V_MONTO_SALUD;

V_LIQUIDO:=(V_MONTO_IMPONIBLE-V_DESCUENTO)+V_MONTO_NO_IMPONIBLE;



INSERT INTO CALCULO_PAGO_MES
(IDPAGO, IDCHOFER, RUT,
NOMBRECOMPLETO, MOVILIZACION, COLACION,
BONO_ANTIGUEDAD, BONO_CARGAS, CANT_VIAJES_MES,
MONTO_VIAJES, SALUD, AFP,
TOTAL_IMPONIBLE, TOTAL_NOIMPONIBLE, TOTAL_HABERES,
TOTAL_DESCUENTOS, LIQUIDO)
VALUES
(EXTRACT(MONTH FROM SYSDATE)-1,V_ID_CHOFER_PROCESA, V_RUTCHOFER,
V_NOMBRE_COMPLETO,:B_MOVILIZACION, :B_COLACION,
V_MONTO_ANTIGUEDAD, V_MONTO_CARGAS, V_CANT_VIAJES,
V_MONTO_VIAJES, V_MONTO_SALUD, V_MONTO_AFP,
V_MONTO_IMPONIBLE, V_MONTO_NO_IMPONIBLE, V_TOTAL_HABERES,
V_DESCUENTO, V_LIQUIDO);





    
    
V_ID_CHOFER_PROCESA:=V_ID_CHOFER_PROCESA+1;
END LOOP;
    
END;

/*SELECT *
FROM CALCULO_PAGO_MES;*/





/*ejercicio actividad 1.4 (esquema diferente, tablas diferentes...)*/

VAR B_20 NUMBER;
VAR B_25 NUMBER;
VAR B_30 NUMBER;
VAR B_35 NUMBER;
VAR B_40 NUMBER;
VAR B_ANNO_PROC NUMBER;
EXEC :B_20:=20000;
EXEC :B_25:=25000;
EXEC :B_30:=30000;
EXEC :B_35:=35000;
EXEC :B_40:=40000;
EXEC :B_ANNO_PROC:=EXTRACT(YEAR FROM SYSDATE);

DECLARE
V_ID_EMP NUMBER(10);
V_NUMRUN_EMP NUMBER(13);
V_DVRUN_EMP VARCHAR2(20);
V_NOMBRE_COMPLETO VARCHAR2(40);
V_NOMBRE_COMUNA VARCHAR2(20);
V_SUELDO_BASE NUMBER(10);
V_PORC_MOVIL NUMBER(10);
V_VALOR_MOVIL NUMBER(10);
V_VALOR_TOTAL_MOVIL NUMBER(10);
V_VALOR_EXTRA NUMBER(10);
V_NUMERO_EMPLEADOS NUMBER(3);
V_EMPLEADO_PROCESA NUMBER(4);

BEGIN

SELECT COUNT(*), MIN(ID_EMP) INTO V_NUMERO_EMPLEADOS, V_EMPLEADO_PROCESA FROM EMPLEADO;

FOR J IN 1..V_NUMERO_EMPLEADOS LOOP

SELECT
EM.ID_EMP, EM.NUMRUN_EMP, EM.DVRUN_EMP,
EM.PNOMBRE_EMP||' '||EM.SNOMBRE_EMP||' '||EM.APPATERNO_EMP||' '||EM.APMATERNO_EMP NOMBRE_COMPLETO,
UPPER(CO.NOMBRE_COMUNA), EM.SUELDO_BASE
INTO V_ID_EMP, V_NUMRUN_EMP, V_DVRUN_EMP,
V_NOMBRE_COMPLETO,
V_NOMBRE_COMUNA, V_SUELDO_BASE
FROM EMPLEADO EM INNER JOIN COMUNA CO ON EM.ID_COMUNA=CO.ID_COMUNA
WHERE EM.ID_EMP=V_EMPLEADO_PROCESA;

V_PORC_MOVIL:=TRUNC(V_SUELDO_BASE/100000);

V_VALOR_MOVIL:=TRUNC(V_SUELDO_BASE*(V_PORC_MOVIL/100));

V_VALOR_EXTRA:=
CASE
WHEN V_NOMBRE_COMUNA='MARÍA PINTO' THEN :B_20
WHEN V_NOMBRE_COMUNA='CURACAVÍ' THEN :B_25
WHEN V_NOMBRE_COMUNA='TALAGANTE' THEN :B_30
WHEN V_NOMBRE_COMUNA='EL MONTE' THEN :B_35
WHEN V_NOMBRE_COMUNA='BUIN' THEN :B_40
ELSE 0

END;

V_VALOR_TOTAL_MOVIL:=V_VALOR_EXTRA+V_VALOR_MOVIL;


INSERT INTO PROY_MOVILIZACION
(ANNO_PROCESO, ID_EMP, NUMRUN_EMP,
DVRUN_EMP, NOMBRE_EMPLEADO, NOMBRE_COMUNA,
SUELDO_BASE, PORC_MOVIL_NORMAL, VALOR_MOVIL_NORMAL,
VALOR_MOVIL_EXTRA, VALOR_TOTAL_MOVIL)
VALUES
(:B_ANNO_PROC, V_EMPLEADO_PROCESA, V_NUMRUN_EMP,
V_DVRUN_EMP, V_NOMBRE_COMPLETO,V_NOMBRE_COMUNA,
V_SUELDO_BASE, V_PORC_MOVIL, V_VALOR_MOVIL,
V_VALOR_EXTRA, V_VALOR_TOTAL_MOVIL);

V_EMPLEADO_PROCESA:=V_EMPLEADO_PROCESA+10;

END LOOP;
END;

SELECT *
FROM PROY_MOVILIZACION


/*CASO 2 1.4*/
/*PARA CONCATENAR VARIABLES, TAMBIEN SE USA ||*/

/*SIEMPRE RECORDAR PONER EL DV EN UN VARCHAR Y NO EN UN NUMBER!!!!!!!!!!!!*/
DECLARE
V_ID_EMP NUMBER(10); 
V_NUMRUN_EMP NUMBER(10); 
V_DVRUN_EMP VARCHAR2(10);
V_NOMBRE_EMPLEADO VARCHAR2(40);
V_NOMBRE_ESTADO_CIVIL VARCHAR2(30);
V_PNOMBRE_EMP VARCHAR(20);
V_SUELDO_BASE NUMBER(10);
V_ANNOS_TRABAJADOS NUMBER(3);
V_NOMBRE_USUARIO VARCHAR2(30);
V_XONO VARCHAR2(1);
V_CLAVE_USUARIO VARCHAR2(30);
V_FECHA_NAC DATE;
V_APPATERNO_EMP VARCHAR2(20);
V_2LETRAS_APPAT VARCHAR2(2);
V_N_EMPLEADOS NUMBER(10);
V_EMP_PROCES NUMBER(10);

BEGIN
    SELECT COUNT(*), MIN(ID_EMP) INTO V_N_EMPLEADOS, V_EMP_PROCES FROM EMPLEADO;
    
    
    
    
    
FOR J IN 1..V_N_EMPLEADOS LOOP
        SELECT EM.ID_EMP, EM.NUMRUN_EMP, EM.DVRUN_EMP,
    EM.PNOMBRE_EMP||' '||EM.SNOMBRE_EMP||' '||EM.APPATERNO_EMP||' '||EM.APMATERNO_EMP AS NOMBRE_EMPLEADO,
    EC.NOMBRE_ESTADO_CIVIL, EM.PNOMBRE_EMP, EM.SUELDO_BASE, MONTHS_BETWEEN(SYSDATE, EM.FECHA_CONTRATO)/12, EM.FECHA_NAC,
    EM.APPATERNO_EMP
    INTO  V_ID_EMP, V_NUMRUN_EMP, V_DVRUN_EMP, V_NOMBRE_EMPLEADO, V_NOMBRE_ESTADO_CIVIL, V_PNOMBRE_EMP, V_SUELDO_BASE,
    V_ANNOS_TRABAJADOS, V_FECHA_NAC, V_APPATERNO_EMP
    FROM EMPLEADO EM INNER JOIN ESTADO_CIVIL EC ON EC.ID_ESTADO_CIVIL=EM.ID_ESTADO_CIVIL
    WHERE EM.ID_EMP=V_EMP_PROCES;
    
    V_XONO:=
    CASE
    WHEN V_ANNOS_TRABAJADOS<10 THEN 'X'
    ELSE NULL
    END;
    
    /*V_2LETRAS_APPAT:=*/
    /*SELECT NOMBRE_ESTADO_CIVIL FROM ESTADO_CIVIL*/
    
    IF
        V_NOMBRE_ESTADO_CIVIL='CASADO' OR V_NOMBRE_ESTADO_CIVIL='ACUERDO DE UNION CIVIL' 
        THEN 
            V_2LETRAS_APPAT:=SUBSTR(V_APPATERNO_EMP,1,2);
    
    ELSIF 
        V_NOMBRE_ESTADO_CIVIL='DIVORCIADO' OR V_NOMBRE_ESTADO_CIVIL='SOLTERO' 
        THEN 
            V_2LETRAS_APPAT:=SUBSTR(V_APPATERNO_EMP,1,-2);
    
    ELSIF 
        V_NOMBRE_ESTADO_CIVIL='VIUDO' 
        THEN 
            V_2LETRAS_APPAT:=SUBSTR(V_APPATERNO_EMP,LENGTH(V_APPATERNO_EMP)-3,2);
            
    ELSIF 
        V_NOMBRE_ESTADO_CIVIL='SEPARADO' 
        THEN 
            V_2LETRAS_APPAT:=SUBSTR(V_APPATERNO_EMP,LENGTH(V_APPATERNO_EMP)-2,2);        
    
    END IF;
    
    
    
    V_NOMBRE_USUARIO:=SUBSTR(LOWER(V_NOMBRE_ESTADO_CIVIL),1,1)||SUBSTR(V_PNOMBRE_EMP,1,3)||LENGTH(V_PNOMBRE_EMP)||
    '*'||SUBSTR(V_SUELDO_BASE,LENGTH(V_SUELDO_BASE),1)||V_DVRUN_EMP||V_ANNOS_TRABAJADOS||V_XONO;
    
    V_CLAVE_USUARIO:=SUBSTR(V_NUMRUN_EMP,1,3)||EXTRACT(YEAR FROM V_FECHA_NAC)+2||
    SUBSTR(V_SUELDO_BASE,LENGTH(V_SUELDO_BASE)-3,3)-1||V_2LETRAS_APPAT||V_EMP_PROCES||TO_CHAR(SYSDATE,'FMMMYYYY');
    
    
    
    
    
    INSERT INTO USUARIO_CLAVE
    (ID_EMP, NUMRUN_EMP, DVRUN_EMP,
    NOMBRE_EMPLEADO, NOMBRE_USUARIO, CLAVE_USUARIO)
    VALUES
    (V_EMP_PROCES, V_NUMRUN_EMP, V_DVRUN_EMP,
    V_NOMBRE_EMPLEADO, V_NOMBRE_USUARIO, V_CLAVE_USUARIO);
    
    
    V_EMP_PROCES:=V_EMP_PROCES+10;
    END LOOP;
END;


/*SELECT *
FROM USUARIO_CLAVE;*/


/*CASO 3 1.4*/

/*ANNO_PROCESO, ID_CAMION, NRO_PATENTE, VALOR_ARRIENDO_DIA, VALOR_GARACTIA_DIA, TOTAL_VECES_ARRENDADO*/
DECLARE
V_ID_CAMION NUMBER(10);
V_NRO_PATENTE VARCHAR2(10);
V_VALOR_ARRIENDO_DIA NUMBER(10);
V_VALOR_GARANTIA_DIA NUMBER(10);
V_CANT_ARRIENDOS NUMBER(10);
V_ANNO_PROCESO NUMBER(4);
V_CANT_CAMION NUMBER(10);
V_CAMIION_PROCE NUMBER(10);
BEGIN

SELECT COUNT(*), MIN(ID_CAMION)
INTO V_CANT_CAMION, V_CAMIION_PROCE
FROM CAMION;


FOR J IN 1..V_CANT_CAMION LOOP

SELECT
ID_CAMION, NRO_PATENTE, VALOR_ARRIENDO_DIA, VALOR_GARANTIA_DIA
INTO V_ID_CAMION, V_NRO_PATENTE, V_VALOR_ARRIENDO_DIA, V_VALOR_GARANTIA_DIA
FROM CAMION WHERE ID_CAMION=V_CAMIION_PROCE;

SELECT COUNT(*)
INTO V_CANT_ARRIENDOS
FROM ARRIENDO_CAMION
WHERE ID_CAMION=V_CAMIION_PROCE AND EXTRACT(YEAR FROM FECHA_INI_ARRIENDO)=EXTRACT(YEAR FROM SYSDATE)-1;

IF V_CANT_ARRIENDOS<4 THEN 
V_VALOR_ARRIENDO_DIA:=V_VALOR_ARRIENDO_DIA-(V_VALOR_ARRIENDO_DIA*(22.5/100));
V_VALOR_GARANTIA_DIA:=V_VALOR_GARANTIA_DIA-(V_VALOR_GARANTIA_DIA*(22.5/100));
UPDATE CAMION
SET VALOR_ARRIENDO_DIA=V_VALOR_ARRIENDO_DIA, VALOR_GARANTIA_DIA=V_VALOR_GARANTIA_DIA
WHERE ID_CAMION=V_CAMIION_PROCE;
END IF;



V_ANNO_PROCESO:=EXTRACT(YEAR FROM SYSDATE);


INSERT INTO HIST_ARRIENDO_ANUAL_CAMION
(ANNO_PROCESO, ID_CAMION, NRO_PATENTE, VALOR_ARRIENDO_DIA, VALOR_GARACTIA_DIA, TOTAL_VECES_ARRENDADO)
VALUES
(V_ANNO_PROCESO, V_CAMIION_PROCE, V_NRO_PATENTE, V_VALOR_ARRIENDO_DIA, V_VALOR_GARANTIA_DIA, V_CANT_ARRIENDOS);


V_CAMIION_PROCE:=V_CAMIION_PROCE+1;
END LOOP;


END;

/*SELECT *
FROM HIST_ARRIENDO_ANUAL_CAMION;*/





/*CASO 4 1.4*/

VAR B_TOTAL_GANANCIAS_ANNO NUMBER;
VAR B_PORC_GANANCIAS NUMBER;
VAR B_320 NUMBER;
VAR B_600 NUMBER;
VAR B_601 NUMBER;
VAR B_1300 NUMBER;
VAR B_1301 NUMBER;
VAR B_1800 NUMBER;
VAR B_1801 NUMBER;
VAR B_2200 NUMBER;
VAR B_2201 NUMBER;
VAR B_35PORC NUMBER;
VAR B_25PORC NUMBER;
VAR B_20PORC NUMBER;
VAR B_15PORC NUMBER;
VAR B_5PORC NUMBER;

EXEC :B_35PORC:=35;
EXEC :B_25PORC:=25;
EXEC :B_20PORC:=20;
EXEC :B_15PORC:=15;
EXEC :B_5PORC:=5;

EXEC :B_320:=320000;
EXEC :B_600:=600000;
EXEC :B_601:=600001;
EXEC :B_1300:=1300000;
EXEC :B_1301:=1300001;
EXEC :B_1800:=1800000;
EXEC :B_1801:=1800001;
EXEC :B_2200:=2200000;
EXEC :B_2201:=2200001;

EXEC :B_TOTAL_GANANCIAS_ANNO:=200000000;
EXEC :B_PORC_GANANCIAS:=30;


DECLARE
V_ID_EMP NUMBER(10);
V_SUELDO_BASE NUMBER(10);
V_30_PORC_TOTAL NUMBER(10):=TRUNC(:B_TOTAL_GANANCIAS_ANNO*(:B_PORC_GANANCIAS/100));
V_VALOR_BONIF NUMBER(10);
V_TRAMO1 NUMBER(10);
V_TRAMO2 NUMBER(10);
V_TRAMO3 NUMBER(10);
V_TRAMO4 NUMBER(10);
V_TRAMO5 NUMBER(10);
V_ANNO_PROCESO NUMBER(4):=EXTRACT(YEAR FROM SYSDATE);
V_TOTAL_EMP NUMBER(10);
V_EMP_PROCESA NUMBER(10);


BEGIN

SELECT COUNT(*), MIN(ID_EMP) INTO V_TOTAL_EMP, V_EMP_PROCESA
FROM EMPLEADO;

FOR J IN 1..V_TOTAL_EMP LOOP
SELECT
ID_EMP, SUELDO_BASE
INTO V_ID_EMP, V_SUELDO_BASE
FROM EMPLEADO
WHERE ID_EMP=V_EMP_PROCESA;

SELECT COUNT(*)
INTO V_TRAMO1
FROM EMPLEADO
WHERE SUELDO_BASE>=:B_320 AND SUELDO_BASE<=:B_600;

SELECT COUNT(*)
INTO V_TRAMO2
FROM EMPLEADO
WHERE SUELDO_BASE>=:B_601 AND SUELDO_BASE<=:B_1300;


SELECT COUNT(*)
INTO V_TRAMO3
FROM EMPLEADO
WHERE SUELDO_BASE>=:B_1301 AND SUELDO_BASE<=:B_1800;

SELECT COUNT(*)
INTO V_TRAMO4
FROM EMPLEADO
WHERE SUELDO_BASE>=:B_1801 AND SUELDO_BASE<=:B_2200;

SELECT COUNT(*)
INTO V_TRAMO5
FROM EMPLEADO
WHERE SUELDO_BASE>=:B_2201;

/*SENTENCIA IF*/

IF V_SUELDO_BASE>=:B_320 AND V_SUELDO_BASE<=:B_600
THEN
    V_VALOR_BONIF:=TRUNC((V_30_PORC_TOTAL*(:B_35PORC/100))/V_TRAMO1);
    
ELSIF V_SUELDO_BASE>=:B_601 AND V_SUELDO_BASE<=:B_1300
THEN
    V_VALOR_BONIF:=TRUNC((V_30_PORC_TOTAL*(:B_25PORC/100))/V_TRAMO2);
    
ELSIF V_SUELDO_BASE>=:B_1301 AND V_SUELDO_BASE<=:B_1800
THEN 
    V_VALOR_BONIF:=TRUNC((V_30_PORC_TOTAL*(:B_20PORC/100))/V_TRAMO3);
    
    ELSIF V_SUELDO_BASE>=:B_1801 AND V_SUELDO_BASE<=:B_2200
THEN 
    V_VALOR_BONIF:=TRUNC((V_30_PORC_TOTAL*(:B_15PORC/100))/V_TRAMO4);
    
        ELSIF V_SUELDO_BASE>=:B_2201
THEN 
    V_VALOR_BONIF:=TRUNC((V_30_PORC_TOTAL*(:B_5PORC/100))/V_TRAMO5);

END IF;

INSERT INTO BONIF_POR_UTILIDAD
(ANNO_PROCESO, ID_EMP, SUELDO_BASE, VALOR_BONIF_UTILIDAD)
VALUES
(V_ANNO_PROCESO, V_EMP_PROCESA, V_SUELDO_BASE, V_VALOR_BONIF);


V_EMP_PROCESA:=V_EMP_PROCESA+10;
END LOOP;



/*SELECT *
FROM BONIF_POR_UTILIDAD;*/
END;


/*CASO 5*/
/*  SELECT PORC INTO V_PORC_ANT FROM BONO_ANTIGUEDAD
    WHERE V_ANNO_ANTIGUEDAD BETWEEN ANNO_INF AND ANNO_SUP;
    
    EN VEZ DE NONEQUIJOIN,
    VARIABLES BIND NO SE COLOCA NUMER DE CARACTERES EN UN NUMBER()*/
    --ADD_MONTHS FUNCION UTILIZADA 

VAR B_20 NUMBER;
VAR B_25 NUMBER;
VAR B_30 NUMBER;
VAR B_35 NUMBER;
VAR B_40 NUMBER;
VAR B_PORC_COLACION NUMBER;
VAR B_PORC_MOV_NORMAL NUMBER;
VAR B_PORC_ARRIENDO NUMBER;
VAR B_PORC_BIENESTAR NUMBER;
VAR B_MAPI VARCHAR2;
VAR B_CURA VARCHAR2;
VAR B_TALA VARCHAR2;
VAR B_ELMO VARCHAR2;
VAR B_BUIN VARCHAR2;
VAR B_MOVILIZACION NUMBER;
EXEC :B_PORC_COLACION:=20;
EXEC :B_PORC_BIENESTAR:=12;
EXEC :B_MAPI:='María Pinto';
EXEC :B_CURA:='Curacaví';
EXEC :B_TALA:='Talagante';
EXEC :B_ELMO:='El Monte';
EXEC :B_BUIN:='Buin';
EXEC :B_20:=20;
EXEC :B_25:=25;
EXEC :B_30:=30;
EXEC :B_35:=35;
EXEC :B_40:=40;
EXEC :B_MOVILIZACION:=12;
EXEC :B_PORC_COLACION:=20;


DECLARE
V_ID_EMP NUMBER(30);
V_RUT_EMPLEADO VARCHAR2(30);
V_NOMBRE_EMPLEADO VARCHAR2(50);
V_ANNO_TRIBUTARIO NUMBER(4):=EXTRACT(YEAR FROM SYSDATE);
V_ANNO_PREVTRIBUTARIO DATE:=ADD_MONTHS(SYSDATE ,-12);
V_CANT_ARRIENDO_EMP NUMBER(10);
V_CARGO VARCHAR2(40);
V_MESES_TRABAJADOS NUMBER(10);
V_FECHA_CONTRATO DATE;
V_ANNOS_TRABAJADOS NUMBER(4);
V_SUELDO_BASE_MENSUAL NUMBER(10);
V_SUELDO_BASE_ANUAL NUMBER(10);
V_PORC_ANT NUMBER(3);
V_BONO_ANNOS_ANUAL NUMBER(10);
V_BONO_ESPECIAL_ANUAL NUMBER(10);
V_MOVILIZACION_ANUAL NUMBER(10);
V_NOMBRE_COMUNA VARCHAR2(30);
V_COLACION_ANUAL NUMBER(10);
V_PORC_DESCTO_AFP NUMBER(10);
V_DCTO_AFP NUMBER(10);
V_PORC_DESCTO_SALUD NUMBER(3);
V_DCTO_SAL NUMBER(10);
V_SUELDO_BRUTO NUMBER(10);
V_RENTA_IMPONIBLE_ANUAL NUMBER(10);
V_TOTAL_DCTOS NUMBER(10);
V_FILAS_TOTALES NUMBER(10);
V_EMP_PROCESA NUMBER(10);
BEGIN

SELECT COUNT(*), MIN(ID_EMP) INTO V_FILAS_TOTALES, V_EMP_PROCESA
FROM EMPLEADO;




FOR J IN 1..V_FILAS_TOTALES LOOP



SELECT EM.ID_EMP, EM.NUMRUN_EMP||'-'||EM.DVRUN_EMP RUT_EMPLEADO,
EM.PNOMBRE_EMP||' '||EM.SNOMBRE_EMP||' '||EM.APPATERNO_EMP||' '||EM.APMATERNO_EMP NOMBRE_EMPLEADO, EM.FECHA_CONTRATO, 
EM.SUELDO_BASE, (EM.SUELDO_BASE*V_MESES_TRABAJADOS), CO.NOMBRE_COMUNA, A.PORC_DESCTO_AFP, TS.PORC_DESCTO_SALUD
INTO
V_ID_EMP, V_RUT_EMPLEADO, V_NOMBRE_EMPLEADO, V_FECHA_CONTRATO, V_SUELDO_BASE_MENSUAL, V_SUELDO_BASE_ANUAL,
V_NOMBRE_COMUNA, V_PORC_DESCTO_AFP, V_PORC_DESCTO_SALUD
FROM EMPLEADO EM INNER JOIN COMUNA CO ON EM.ID_COMUNA=CO.ID_COMUNA INNER JOIN AFP A ON EM.COD_AFP=A.COD_AFP
INNER JOIN TIPO_SALUD TS ON EM.COD_TIPO_SAL=TS.COD_TIPO_SAL
WHERE ID_EMP=V_EMP_PROCESA;

SELECT COUNT(*)
INTO V_CANT_ARRIENDO_EMP
FROM ARRIENDO_CAMION AC INNER JOIN CAMION CA ON AC.ID_CAMION=CA.ID_CAMION
INNER JOIN EMPLEADO EM ON EM.ID_EMP=CA.ID_EMP
WHERE EM.ID_EMP=V_EMP_PROCESA AND EXTRACT(YEAR FROM AC.FECHA_INI_ARRIENDO)=EXTRACT(YEAR FROM V_ANNO_PREVTRIBUTARIO);



V_ANNOS_TRABAJADOS:=
TRUNC(MONTHS_BETWEEN(V_ANNO_PREVTRIBUTARIO, V_FECHA_CONTRATO)/12);

V_MESES_TRABAJADOS:=
MONTHS_BETWEEN(V_ANNO_PREVTRIBUTARIO, V_FECHA_CONTRATO);





IF V_ANNOS_TRABAJADOS>0 THEN
    SELECT PORCENTAJE INTO V_PORC_ANT FROM TRAMO_ANTIGUEDAD
    WHERE V_ANNOS_TRABAJADOS BETWEEN TRAMO_INF AND TRAMO_SUP  AND ANNO_VIG=EXTRACT(YEAR FROM SYSDATE);
    ELSE V_PORC_ANT:=2;
    END IF;


/*HASTA ACA NO HAY ERROR*/
V_CARGO:=
CASE 
WHEN V_CANT_ARRIENDO_EMP=0 THEN 'Labores Administrativas'
WHEN V_CANT_ARRIENDO_EMP>0 THEN 'Encargado de Arriendos'
END;








IF
V_MESES_TRABAJADOS>=12 THEN V_MESES_TRABAJADOS:=V_MESES_TRABAJADOS/V_ANNOS_TRABAJADOS;

ELSIF V_MESES_TRABAJADOS<0 THEN V_MESES_TRABAJADOS:=V_MESES_TRABAJADOS*-1;
END IF;




    
    
V_BONO_ANNOS_ANUAL:=V_SUELDO_BASE_ANUAL*(V_PORC_ANT/100);


IF V_CANT_ARRIENDO_EMP>0 
    THEN V_BONO_ESPECIAL_ANUAL:=V_SUELDO_BASE_ANUAL*((5*V_CANT_ARRIENDO_EMP)/100);
    
ELSIF V_CANT_ARRIENDO_EMP=0
    THEN V_BONO_ESPECIAL_ANUAL:=V_SUELDO_BRUTO*(:B_PORC_BIENESTAR/100);/*SE DEBE CAMBIAR SUELDO BASE POR SUELDO BRUTO*/

END IF;


--V_MOVILIZACION_ANUAL
IF V_NOMBRE_COMUNA=:B_MAPI 
THEN
    V_MOVILIZACION_ANUAL:=V_SUELDO_BASE_ANUAL*(:B_20/100);
    
ELSIF V_NOMBRE_COMUNA=:B_CURA
THEN
    V_MOVILIZACION_ANUAL:=V_SUELDO_BASE_ANUAL*(:B_25/100);
ELSIF V_NOMBRE_COMUNA=:B_TALA
THEN
    V_MOVILIZACION_ANUAL:=V_SUELDO_BASE_ANUAL*(:B_30/100);
ELSIF V_NOMBRE_COMUNA=:B_ELMO
THEN
    V_MOVILIZACION_ANUAL:=V_SUELDO_BASE_ANUAL*(:B_35/100);
ELSIF V_NOMBRE_COMUNA=:B_BUIN
THEN
    V_MOVILIZACION_ANUAL:=V_SUELDO_BASE_ANUAL*(:B_40/100); 

ELSE V_MOVILIZACION_ANUAL:=V_SUELDO_BASE_ANUAL*(:B_MOVILIZACION/100);
END IF;

V_COLACION_ANUAL:=V_SUELDO_BASE_ANUAL*(:B_PORC_COLACION/100);

V_DCTO_AFP:=V_SUELDO_BASE_ANUAL*(V_PORC_DESCTO_AFP/100);

V_DCTO_SAL:=V_SUELDO_BASE_ANUAL*(V_PORC_DESCTO_SALUD/100);


V_SUELDO_BRUTO:=V_SUELDO_BASE_ANUAL+V_BONO_ANNOS_ANUAL+V_MOVILIZACION_ANUAL+V_COLACION_ANUAL;

V_RENTA_IMPONIBLE_ANUAL:=V_SUELDO_BASE_ANUAL+V_BONO_ANNOS_ANUAL+V_BONO_ESPECIAL_ANUAL-V_DCTO_SAL-V_DCTO_AFP;

V_TOTAL_DCTOS:=V_DCTO_SAL+V_DCTO_AFP;

IF V_SUELDO_BASE_ANUAL IS NULL 
THEN V_SUELDO_BASE_ANUAL:=0;
END IF;

IF V_BONO_ANNOS_ANUAL IS NULL 
THEN V_BONO_ANNOS_ANUAL:=0;
END IF;

IF V_BONO_ESPECIAL_ANUAL IS NULL 
THEN V_BONO_ESPECIAL_ANUAL:=0;
END IF;

IF V_MOVILIZACION_ANUAL IS NULL 
THEN V_MOVILIZACION_ANUAL:=0;
END IF;

IF V_COLACION_ANUAL IS NULL 
THEN V_COLACION_ANUAL:=0;
END IF;

IF V_TOTAL_DCTOS IS NULL 
THEN V_TOTAL_DCTOS:=0;
END IF;

IF V_SUELDO_BRUTO IS NULL 
THEN V_SUELDO_BRUTO:=0;
END IF;



INSERT INTO INFO_SII
(ANNO_TRIBUTARIO, ID_EMP, RUN_EMPLEADO, NOMBRE_EMPLEADO,
CARGO, MESES_TRABAJADOS, ANNOS_TRABAJADOS, SUELDO_BASE_MENSUAL,
SUELDO_BASE_ANUAL, BONO_ANNOS_ANUAL, BONO_ESPECIAL_ANUAL, MOVILIZACION_ANUAL,
COLACION_ANUAL, DESCTOS_LEGALES, SUELDO_BRUTO_ANUAL, RENTA_IMPONIBLE_ANUAL)
VALUES
(V_ANNO_TRIBUTARIO, V_EMP_PROCESA, V_RUT_EMPLEADO, V_NOMBRE_EMPLEADO,
V_CARGO, V_MESES_TRABAJADOS, V_ANNOS_TRABAJADOS, V_SUELDO_BASE_MENSUAL,
V_SUELDO_BASE_ANUAL, V_BONO_ANNOS_ANUAL, V_BONO_ESPECIAL_ANUAL, V_MOVILIZACION_ANUAL,
V_COLACION_ANUAL, V_TOTAL_DCTOS, V_SUELDO_BRUTO, V_RENTA_IMPONIBLE_ANUAL);


V_EMP_PROCESA:=V_EMP_PROCESA+10;


DBMS_OUTPUT.PUT_LINE(V_SUELDO_BASE_ANUAL||' '||V_MESES_TRABAJADOS);
END LOOP;
END;

/*SELECT *
FROM INFO_SII*/




/*PRACTICA PRUEBA 1-2*/


/*NUMERO_POSTULACION, FECHA_PROCESO, FECHA_VIGENCIA_INFORME, NOMBRE_POSTULANTE, PUNTO_ANTIGUEDAD, PUNTO_SUELDO,
PUNTO_PROFESION, PUNTO_CIVIL, TOTAL_PUNTO, 
DESC_PROD_POSTULA, MONTO_CUENTA_APERTURA, MENSAJE_SISTEMA*/


VAR B_PORC_AFP NUMBER;
VAR B_PORC_SALUD NUMBER;
EXEC :B_PORC_AFP:=10;
EXEC :B_PORC_SALUD:=7;
DECLARE
V_NUMERO_POSTULACION NUMBER(10);
V_NOMBRE_POSTULANTE VARCHAR2(40);
V_FECHA_INICIO_TRABAJO DATE;
V_SUELDO_BRUTO NUMBER(10);
V_ID_PROFESION NUMBER(10);
V_ID_ESTADO_CIVIL NUMBER(10);
V_MONTO_SOLICITADO_CTACOR NUMBER(10);
V_FECHA_PROCESO DATE:=SYSDATE;
V_FECHA_VIG VARCHAR2(10);
V_VIGENCIA DATE;
V_ANNOS_TRABAJADOS NUMBER(4);
V_PUNTO_ANTIGUEDAD NUMBER(4);
V_SUELDO_LIQUIDO NUMBER(10);
V_PUNTO_SUELDO_LIQ NUMBER(10);
V_PUNTO_PROFESION NUMBER(10);
V_PUNTO_EST_CIVIL NUMBER(10);
V_TOTAL_PUNTOS NUMBER(10);
V_COD_PRODUCTO VARCHAR2(10);
V_DESC_PRODUCTO VARCHAR2(50);
V_MONTO_CUENTA_APERTURA NUMBER(10);
V_MENSAJE_SISTEMA VARCHAR2(100);
V_PUNTO_MINIMO NUMBER(10);
V_TOTAL_POST NUMBER(10);
V_POST_PROCESA NUMBER(10);




BEGIN

SELECT COUNT(*), MIN(NUMERO_POSTULACION)
INTO V_TOTAL_POST, V_POST_PROCESA
FROM DATO_POSTULACION;

FOR J IN 1..V_TOTAL_POST LOOP

/*SELECT PRINCIPAL*/
SELECT NUMERO_POSTULACION,NOMBRE||' '||PATERNO||' '||MATERNO NOMBRE_POSTULANTE, FECHA_INICIO_TRABAJO, 
SUELDO_BRUTO, ID_PROFESION, ID_ESTADO_CIVIL, MONTO_SOLICITADO_CTACOR, COD_PRODUCTO, MONTO_SOLICITADO_CTACOR
INTO V_NUMERO_POSTULACION, V_NOMBRE_POSTULANTE, V_FECHA_INICIO_TRABAJO, V_SUELDO_BRUTO,
V_ID_PROFESION, V_ID_ESTADO_CIVIL,
V_MONTO_SOLICITADO_CTACOR, V_COD_PRODUCTO, V_MONTO_CUENTA_APERTURA
FROM DATO_POSTULACION
WHERE NUMERO_POSTULACION=V_POST_PROCESA;


/*FECHA VIGENCIA*/
V_FECHA_VIG:= TO_CHAR(SYSDATE, 'DD')+7||'/'||TO_CHAR(SYSDATE, 'MM/YYYY');

V_VIGENCIA:=NEXT_DAY(TO_DATE(V_FECHA_VIG,'DD/MM/YYYY'), 'VIERNES');

/*PUNTO ANTIGUEDAD*/

V_ANNOS_TRABAJADOS:=TRUNC(MONTHS_BETWEEN(SYSDATE, V_FECHA_INICIO_TRABAJO)/12);


SELECT PUNTO
INTO V_PUNTO_ANTIGUEDAD
FROM RANGO_ANTIGUEDAD
WHERE V_ANNOS_TRABAJADOS BETWEEN RANGO_ANT_MIN AND RANGO_ANT_MAX;

/*PUNTO SUELDO*/



V_SUELDO_LIQUIDO:=V_SUELDO_BRUTO-(V_SUELDO_BRUTO*(:B_PORC_AFP/100))-(V_SUELDO_BRUTO*(:B_PORC_SALUD/100));

DBMS_OUTPUT.PUT_LINE(V_SUELDO_LIQUIDO);
IF V_SUELDO_LIQUIDO<350000
THEN V_SUELDO_LIQUIDO:=V_SUELDO_LIQUIDO+100000;
END IF;
/*RANGO TRUCULENTO*/

SELECT PUNTO
INTO V_PUNTO_SUELDO_LIQ
FROM RANGO_SUELDO_LIQ
WHERE V_SUELDO_LIQUIDO BETWEEN RANGO_SUELDO_MIN AND RANGO_SUELDO_MAX;


/*PUNTO PROFESION*/

SELECT PUNTO
INTO V_PUNTO_PROFESION
FROM PROFESION
WHERE V_ID_PROFESION=ID_PROFESION;

/*PUNTO ESTADO CIVIL*/

SELECT PUNTO
INTO V_PUNTO_EST_CIVIL
FROM ESTADO_CIVIL
WHERE V_ID_ESTADO_CIVIL=ID_ESTADO_CIVIL;

/*TOTAL PTOS*/

V_TOTAL_PUNTOS:=V_PUNTO_EST_CIVIL+V_PUNTO_PROFESION+V_PUNTO_SUELDO_LIQ+V_PUNTO_ANTIGUEDAD;


/*DESCRIPCION PROD*/

SELECT DESCRIPCION
INTO V_DESC_PRODUCTO
FROM PRODUCTO
WHERE COD_PRODUCTO=V_COD_PRODUCTO;

/*MONTO CUENTA APERTURA*/

SELECT PUNTO_MINIMO
INTO V_PUNTO_MINIMO
FROM PRODUCTO
WHERE COD_PRODUCTO=V_COD_PRODUCTO;


/*MENSAJE SISTEMA*/
IF V_TOTAL_PUNTOS>=V_PUNTO_MINIMO THEN
    SELECT MENSAJE_SISTEMA INTO
    V_MENSAJE_SISTEMA
    FROM MENSAJE_SISTEMA
    WHERE COD_MENSAJE='ACEPTCTA';

ELSE 
    SELECT MENSAJE_SISTEMA INTO
    V_MENSAJE_SISTEMA
    FROM MENSAJE_SISTEMA
    WHERE COD_MENSAJE='RECHACTA';

END IF;


/*INSERT*/


INSERT INTO RESULTADO_CTA
(NUMERO_POSTULACION, FECHA_PROCESO, FECHA_VIGENCIA_INFORME, NOMBRE_POSTULANTE,
PUNTO_ANTIGUEDAD, PUNTO_SUELDO, PUNTO_PROFESION, PUNTO_CIVIL, 
TOTAL_PUNTO, DESC_PROD_POSTULA, MONTO_CUENTA_APERTURA, MENSAJE_SISTEMA)
VALUES
(V_POST_PROCESA, V_FECHA_PROCESO, V_VIGENCIA, V_NOMBRE_POSTULANTE, 
V_PUNTO_ANTIGUEDAD, V_PUNTO_SUELDO_LIQ, V_PUNTO_PROFESION, V_PUNTO_EST_CIVIL,
V_TOTAL_PUNTOS, V_DESC_PRODUCTO, V_MONTO_CUENTA_APERTURA, V_MENSAJE_SISTEMA);

V_POST_PROCESA:=V_POST_PROCESA+1;


END LOOP;

/*SELECT *
FROM RESULTADO_CTA;*/

END;

